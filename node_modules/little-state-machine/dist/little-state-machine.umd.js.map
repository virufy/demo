{"version":3,"file":"little-state-machine.umd.js","sources":["../src/constants.ts","../src/logic/storeFactory.ts","../src/StateMachineContext.tsx","../src/stateMachine.tsx"],"sourcesContent":["export const STORE_DEFAULT_NAME = '__LSM__';\nexport const STORE_ACTION_NAME = '__LSM_NAME__';\nexport const PERSIST_OPTION = {\n  NONE: 'none',\n  ACTION: 'action',\n  UNLOAD: 'beforeUnload',\n} as const;\n","import { PERSIST_OPTION, STORE_DEFAULT_NAME } from '../constants';\nimport { GlobalState, StateMachineOptions } from '../types';\n\nfunction StoreFactory() {\n  let options: StateMachineOptions = {\n    name: STORE_DEFAULT_NAME,\n    middleWares: [],\n    persist: PERSIST_OPTION.ACTION,\n  };\n  let state: GlobalState = {};\n\n  try {\n    options.storageType =\n      typeof sessionStorage !== 'undefined' ? window.sessionStorage : undefined;\n  } catch {}\n\n  return {\n    updateStore(defaultValues: GlobalState) {\n      try {\n        state =\n          (options.storageType &&\n            JSON.parse(options.storageType.getItem(options.name!) || '')) ||\n          defaultValues;\n      } catch {\n        state = defaultValues;\n      }\n    },\n    saveStore() {\n      options.storageType &&\n        options.storageType.setItem(options.name!, JSON.stringify(state));\n    },\n    get state() {\n      return state;\n    },\n    set state(value) {\n      state = value;\n    },\n    get options() {\n      return options;\n    },\n    set options(value) {\n      options = value;\n    },\n  };\n}\n\nexport default StoreFactory();\n","import * as React from 'react';\nimport storeFactory from './logic/storeFactory';\nimport { StateMachineContextValue } from './types';\nimport { PERSIST_OPTION } from './constants';\n\ntype PropsChildren = {\n  children?: React.ReactNode;\n};\n\nconst StateMachineContext = React.createContext<StateMachineContextValue>(\n  undefined as any,\n);\n\nexport const StateMachineProvider: React.FC<PropsChildren> = ({ children }) => {\n  const [state, setState] = React.useState(storeFactory.state);\n\n  React.useEffect(() => {\n    if (storeFactory.options.persist === PERSIST_OPTION.UNLOAD) {\n      window.onbeforeunload = () => storeFactory.saveStore();\n      storeFactory.options.storageType &&\n        storeFactory.options.storageType.removeItem(storeFactory.options.name!);\n    }\n  }, []);\n\n  return (\n    <StateMachineContext.Provider value={{ state, setState }}>\n      {children}\n    </StateMachineContext.Provider>\n  );\n};\n\nexport const useStateMachineContext = () =>\n  React.useContext<StateMachineContextValue>(StateMachineContext);\n","import * as React from 'react';\nimport { useStateMachineContext } from './StateMachineContext';\nimport storeFactory from './logic/storeFactory';\nimport {\n  StateMachineOptions,\n  GlobalState,\n  AnyCallback,\n  AnyActions,\n  ActionsOutput,\n} from './types';\nimport { PERSIST_OPTION, STORE_ACTION_NAME } from './constants';\n\nexport function createStore(\n  defaultState: GlobalState,\n  options?: StateMachineOptions,\n) {\n  if (options) {\n    storeFactory.options = {\n      ...storeFactory.options,\n      ...options,\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window !== 'undefined') {\n      window.__LSM_NAME__ = storeFactory.options.name;\n      window.__LSM_RESET__ = () =>\n        storeFactory.options.storageType &&\n        storeFactory.options.storageType.removeItem(storeFactory.options.name!);\n    }\n  }\n\n  storeFactory.updateStore(defaultState);\n}\n\nconst actionTemplate =\n  <TCallback extends AnyCallback>(\n    setState: React.Dispatch<React.SetStateAction<GlobalState>>,\n    callback: TCallback,\n  ) =>\n  (payload: Parameters<TCallback>[1], options?: { skipRender: boolean }) => {\n    if (process.env.NODE_ENV !== 'production') {\n      window[STORE_ACTION_NAME] = callback.name;\n    }\n\n    storeFactory.state = callback(storeFactory.state, payload);\n\n    if (storeFactory.options.middleWares) {\n      storeFactory.state = storeFactory.options.middleWares.reduce(\n        (currentValue, currentFunction) =>\n          currentFunction(currentValue, callback.name, payload) || currentValue,\n        storeFactory.state,\n      );\n    }\n\n    (!options || !options.skipRender) && setState(storeFactory.state);\n\n    if (storeFactory.options.persist === PERSIST_OPTION.ACTION) {\n      storeFactory.saveStore();\n    }\n  };\n\nexport function useStateMachine<\n  TCallback extends AnyCallback,\n  TActions extends AnyActions<TCallback>,\n>(\n  actions?: TActions,\n): {\n  actions: ActionsOutput<TCallback, TActions>;\n  state: GlobalState;\n  getState: () => GlobalState;\n} {\n  const { state, setState } = useStateMachineContext();\n  const actionsRef = React.useRef(\n    Object.entries(actions || {}).reduce(\n      (previous, [key, callback]) =>\n        Object.assign({}, previous, {\n          [key]: actionTemplate(setState, callback),\n        }),\n      {} as ActionsOutput<TCallback, TActions>,\n    ),\n  );\n\n  return {\n    actions: actionsRef.current,\n    state,\n    getState: React.useCallback(() => storeFactory.state, []),\n  };\n}\n"],"names":["PERSIST_OPTION","options","name","middleWares","persist","state","storageType","sessionStorage","window","undefined","updateStore","defaultValues","JSON","parse","getItem","saveStore","setItem","stringify","value","StoreFactory","StateMachineContext","React","createContext","children","useState","storeFactory","setState","useEffect","onbeforeunload","removeItem","Provider","defaultState","actions","useContext","actionsRef","useRef","Object","entries","reduce","previous","assign","callback","payload","currentValue","currentFunction","skipRender","actionTemplate","current","getState","useCallback"],"mappings":"qjBAEaA,EAEH,WCDV,WACE,IAAIC,EAA+B,CACjCC,KDL8B,UCM9BC,YAAa,GACbC,QAASJ,GAEPK,EAAqB,GAEzB,IACEJ,EAAQK,YACoB,oBAAnBC,eAAiCC,OAAOD,oBAAiBE,EAClE,UAEF,MAAO,CACLC,qBAAYC,GACV,IACEN,EACGJ,EAAQK,aACPM,KAAKC,MAAMZ,EAAQK,YAAYQ,QAAQb,EAAQC,OAAU,KAC3DS,EACF,SACAN,EAAQM,IAGZI,qBACEd,EAAQK,aACNL,EAAQK,YAAYU,QAAQf,EAAQC,KAAOU,KAAKK,UAAUZ,KAE1DA,YACF,OAAOA,GAELA,UAAMa,GACRb,EAAQa,GAENjB,cACF,OAAOA,GAELA,YAAQiB,GACVjB,EAAUiB,IAKDC,GCrCTC,EAAsBC,EAAMC,mBAChCb,0OAG2D,gBAAGc,IAAAA,WACpCF,EAAMG,SAASC,EAAapB,OAA/CA,OAAOqB,OAUd,OARAL,EAAMM,UAAU,WFXR,iBEYFF,EAAaxB,QAAQG,UACvBI,OAAOoB,eAAiB,kBAAMH,EAAaV,aAC3CU,EAAaxB,QAAQK,aACnBmB,EAAaxB,QAAQK,YAAYuB,WAAWJ,EAAaxB,QAAQC,QAEpE,IAGDmB,gBAACD,EAAoBU,UAASZ,MAAO,CAAEb,MAAAA,EAAOqB,SAAAA,IAC3CH,2BCbLQ,EACA9B,GAEIA,IACFwB,EAAaxB,aACRwB,EAAaxB,QACbA,IAaPwB,EAAaf,YAAYqB,+BAkCzBC,GAMA,MDxCAX,EAAMY,WAAqCb,GCwCnCf,IAAAA,MAAOqB,IAAAA,SACTQ,EAAab,EAAMc,OACvBC,OAAOC,QAAQL,GAAW,IAAIM,OAC5B,SAACC,kBACCH,OAAOI,OAAO,GAAID,gBAxCxB,SACEb,EACAe,mBAEDC,EAAmCzC,GAKlCwB,EAAapB,MAAQoC,EAAShB,EAAapB,MAAOqC,GAE9CjB,EAAaxB,QAAQE,cACvBsB,EAAapB,MAAQoB,EAAaxB,QAAQE,YAAYmC,OACpD,SAACK,EAAcC,UACbA,EAAgBD,EAAcF,EAASvC,KAAMwC,IAAYC,GAC3DlB,EAAapB,UAIfJ,IAAYA,EAAQ4C,aAAenB,EAASD,EAAapB,OAEvDoB,EAAaxB,QAAQG,UAAYJ,GACnCyB,EAAaV,aAmBF+B,CAAepB,aAE1B,KAIJ,MAAO,CACLM,QAASE,EAAWa,QACpB1C,MAAAA,EACA2C,SAAU3B,EAAM4B,YAAY,kBAAMxB,EAAapB,OAAO"}